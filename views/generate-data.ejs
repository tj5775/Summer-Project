<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Generate Sensor Data</title>

    <!-- Used for start/stop buttons --> 
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor" crossorigin="anonymous">

    <!-- Custom fonts for this template -->
    <link href="template/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="template/css/sb-admin-2.min.css" rel="stylesheet">

    <!-- Custom styles for this page -->
    <link href="template/vendor/datatables/dataTables.bootstrap4.min.css" rel="stylesheet">

</head>

<body id="page-top">

    <!-- Page Wrapper -->
    <div id="wrapper">

        <!-- Sidebar -->
        <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">

            <!-- Sidebar - Brand -->
            <a class="sidebar-brand d-flex align-items-center justify-content-center" href="index.html">
                <div class="sidebar-brand-icon rotate-n-15">
                    <!-- <i class="fas fa-laugh-wink"></i> -->
                </div>
                <div class="sidebar-brand-text mx-3">Sensor Portal</div>
            </a>

            <!-- Divider -->
            <hr class="sidebar-divider my-0">

            <!-- Nav Item - Dashboard -->
            <li class="nav-item">
                <a class="nav-link" href="index.html">
                    <i class="fas fa-fw fa-tachometer-alt"></i>
                    <span>HOME</span></a>
            </li>

            <!-- Divider -->
            <hr class="sidebar-divider">

            <!-- Heading -->
            <div class="sidebar-heading">
                Menu
            </div>

            <!-- Nav Item - Pages Collapse Menu -->
            <li class="nav-item">
                <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapsePages"
                    aria-expanded="true" aria-controls="collapsePages">
                    <i class="fas fa-fw fa-folder"></i>
                    <span>Profile</span>
                </a>
                <div id="collapsePages" class="collapse" aria-labelledby="headingPages" data-parent="#accordionSidebar">
                    <div class="bg-white py-2 collapse-inner rounded">
                        <h6 class="collapse-header">Login Screens:</h6>
                        <a class="collapse-item" href="login.html">Login</a>
                        <a class="collapse-item" href="template/register.html">Register</a>
                        <a class="collapse-item" href="template/forgot-password.html">Forgot Password</a>
                        <div class="collapse-divider"></div>
                        <h6 class="collapse-header">Other Pages:</h6>
                        <a class="collapse-item" href="template/404.html">404 Page</a>
                        <a class="collapse-item" href="template/blank.html">Blank Page</a>
                    </div>
                </div>
            </li>

            <!-- Nav Item - Pages Collapse Menu -->
            <li class="nav-item">
                <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseTwo"
                    aria-expanded="true" aria-controls="collapseTwo">
                    <i class="fas fa-fw fa-cog"></i>
                    <span>Sensors</span>
                </a>
                <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionSidebar">
                    <div class="bg-white py-2 collapse-inner rounded">
                        <h6 class="collapse-header">Sensor options:</h6>
                        <a class="collapse-item" href="create-sensor.html">Create Sensors</a>
                        <a class="collapse-item" href="generate-data">Generate Sensor Data</a>
                        <a class="collapse-item" href="my-sensors">My Sensors</a>
                    </div>
                </div>
            </li>

            <!-- Divider -->
            <hr class="sidebar-divider d-none d-md-block">

            <!-- Sidebar Toggler (Sidebar) -->
            <div class="text-center d-none d-md-inline">
                <button class="rounded-circle border-0" id="sidebarToggle"></button>
            </div>

        </ul>
        <!-- End of Sidebar -->

        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">

            <!-- Main Content -->
            <div id="content">

                <!-- Topbar -->
                <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">

                    <!-- Sidebar Toggle (Topbar) -->
                    <form class="form-inline">
                        <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
                            <i class="fa fa-bars"></i>
                        </button>
                    </form>

                    <!-- Topbar Navbar -->
                    <ul class="navbar-nav ml-auto">
                        <!-- Nav Item - User Information -->
                        <li class="nav-item dropdown no-arrow">
                            <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="mr-2 d-none d-lg-inline text-gray-600 small">User</span>
                                <img class="img-profile rounded-circle"
                                    src="template/img/undraw_profile.svg">
                            </a>
                            <!-- Dropdown - User Information -->
                            <div class="dropdown-menu dropdown-menu-right shadow animated--grow-in"
                                aria-labelledby="userDropdown">
                                <a class="dropdown-item" href="./template/profile.html">
                                    <i class="fas fa-user fa-sm fa-fw mr-2 text-gray-400"></i>
                                    Profile
                                </a>
                                <a class="dropdown-item" href="#">
                                    <i class="fas fa-cogs fa-sm fa-fw mr-2 text-gray-400"></i>
                                    Settings
                                </a>
                                <a class="dropdown-item" href="#">
                                    <i class="fas fa-list fa-sm fa-fw mr-2 text-gray-400"></i>
                                    Activity Log
                                </a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#logoutModal">
                                    <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
                                    Logout
                                </a>
                            </div>
                        </li>
                    </ul>
                </nav>
                <!-- End of Topbar -->

                <!-- Begin Page Content -->
                <div class="container-fluid">

                    <!-- Page Heading -->
                    <h1 class="h3 mb-2 text-gray-800">Generate Data</h1>
                    <p class="mb-4">Add more data to your sensor list! Use the sensors and topics you have created to enter more data.</p>

                    <div class="card shadow mb-4">
                        <div class="card-header py-3">          
                            <h6 class="m-0 font-weight-bold text-primary">Add Sensor Data</h6>                             
                        </div>
                        <div class="card-body">
                            <div class="text-center justify-content-center font-weight-bold">
                                <label for="sensor">Choose a sensor:</label>
                                <select name="sensor" id="sensor" onchange="generateData()">
                                    <option value="none" selected disabled hidden>Select a sensor</option>
                                    <% for (let i = 0; i < dataQuery.length; i++) { %>
                                        <option value = <%= i %>><%=dataQuery[i].sensor_id + ". " +  dataQuery[i].name + ", " +  dataQuery[i].topic + ", " +  dataQuery[i].min + ", " +  dataQuery[i].max %> </option>                                    
                                        <% } %>
                                </select>
                                    <button class="btn btn-success" id="start">Start</button>
                                    <button class="btn btn-danger" id="stop">Stop</button>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <!-- Displays the new added elements if insertion was sucessful-->
                            <div id = "dataOuput"></div>
                        </div>
                    </div>

                </div>
                <!-- /.container-fluid -->
            </div>

            <!-- End of Main Content -->

            <!-- Footer -->
            <footer class="sticky-footer bg-white">
                <div class="container my-auto">
                    <div class="copyright text-center my-auto">
                        <span>Copyright &copy; Hakem, Toscano, & Ungos 2022</span>
                    </div>
                </div>
            </footer>
            <!-- End of Footer -->
        </div>
        <!-- End of Content Wrapper -->
    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>

    <!-- Logout Modal-->
    <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">Select "Logout" below if you are ready to end your current session.</div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                    <a class="btn btn-primary" href="template/login.html">Logout</a>
                </div>
            </div>
        </div>
    </div>

    <script>

        // Variables that store the values for time, min, and max.
        var timer;
        var min = 0;
        var max = 0;
        var name = "";
        var topic = "";
        var sensorID = 0;
        var randomNumber;
        var randomNumbers = "";
        let index;

        document.getElementById("start").addEventListener("click", startRandomNumbers);
        document.getElementById("stop").addEventListener("click", stopRandomNumbers);
        document.getElementById("stop").addEventListener("click", saveData);

        // Generating random data
        async function generateData() {
            var response = await fetch("/getMetaData");
            if(!response) {
            const message = `An error has occured: ${response.status}`;
            throw new Error(message);
            return null;
            }
            else {
            const records = await response.json();
            sensorID = records.rows[index].sensor_id;
            name = records.rows[index].name;
            min = records.rows[index].min;
            max = records.rows[index].max;
            topic = records.rows[index].topic;
            }
        }

        // Creates random numbers
        function startRandomNumbers(e) {
            e.preventDefault();
            alert("Generating random numbers");
            randomNumber = generateRandomNumbers();
            console.log(randomNumber);
            randomNumbers += randomNumber + ", ";
            timer = setInterval(function () {
                randomNumber = generateRandomNumbers();
                randomNumbers += randomNumber + ", ";
                console.log(randomNumbers);
            }, 1000);
        }

        // Generates a random number with the range of the min and max values
        function generateRandomNumbers() {
            // find diff
            let difference = max - min + 1;
            // generate random number
            let rand = Math.random();
            // multiply with difference
            rand = Math.floor(rand * difference);

            // add with min value
            rand = rand + min;
            return rand;
        }

        // Stops generating random numbers
        function stopRandomNumbers(e) {
            e.preventDefault();
            // removes the last ', ' in the string
            randomNumbers = randomNumbers.slice(0, -2);
            clearInterval(timer);
            alert("Stop generating random numbers. Check My Sensors page!");
        }

        // Saves a random number
        function saveData() {
        var numArray = randomNumbers.split(",");
        let numLength = numArray.length;
        for (let i = 0; i < numLength; i++) {
            let data = { sensor_ID: sensorID, randomValue: numArray[i] };
            console.log(`Generated value: ${numArray[i]} | Stored at row: ${Number(index+1)}`);
            fetch("/saveGeneratedData", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data),
            }).then((res) => {
            console.log("Request complete! response:", res);
            });
        }
        randomNumbers = "";
        }
    </script>

    <!-- Bootstrap core JavaScript-->
    <script src="template/vendor/jquery/jquery.min.js"></script>
    <script src="template/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript-->
    <script src="template/vendor/jquery-easing/jquery.easing.min.js"></script>

    <!-- Custom scripts for all pages-->
    <script src="template/js/sb-admin-2.min.js"></script>

    <!-- Page level plugins -->
    <script src="template/vendor/datatables/jquery.dataTables.min.js"></script>
    <script src="template/vendor/datatables/dataTables.bootstrap4.min.js"></script>

    <!-- Page level custom scripts -->
    <script src="template/js/demo/datatables-demo.js"></script>

</body>

</html>